{"version":3,"sources":["components/weather/weatherCard.js","components/weather/temp.js","components/App.jsx","index.js"],"names":["WeatherCard","tempInfo","useState","weatherState","setWeatherState","temp","humidity","pressure","weathermood","name","speed","country","sunset","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","Temp","searchValue","getSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff342d11.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nconst WeatherCard = ({tempInfo}) => {\r\n\r\n    const [weatherState, setWeatherState] = useState(\"\");\r\n\r\n    const {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset\r\n    } = tempInfo;\r\n\r\n    useEffect(() => {\r\n        if(weathermood) {\r\n            switch (weathermood) {\r\n                case 'Clouds':\r\n                    setWeatherState(\"wi-day-cloudy\");\r\n                    break;\r\n                case 'Haze':\r\n                    setWeatherState(\"wi-fog\");\r\n                    break;\r\n                case 'Mist':\r\n                    setWeatherState(\"wi-dust\");\r\n                    break;\r\n                case 'Clear':\r\n                    setWeatherState(\"wi-day-sunny\");\r\n                    break;\r\n                case 'Rain':\r\n                    setWeatherState(\"wi-rain\");\r\n                    break;\r\n            \r\n                default: setWeatherState(\"wi-day-sunny\");\r\n                    break;\r\n            }\r\n        }\r\n    })\r\n\r\n    let sec = sunset;\r\n    let date = new Date(sec * 1000);\r\n    let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n\r\n    return (\r\n        <>\r\n            <article className='widget'>\r\n            <div className='weatherIcon'>\r\n                <i className={`wi ${weatherState}`}></i>\r\n            </div>\r\n            <div className='weatherInfo'>\r\n                <div className='temperature'>\r\n                    <span>{temp}&deg;</span>\r\n                </div>\r\n                <div className='description'>\r\n                    <div className='weatherCondition'>{weathermood}</div>\r\n                    <div className='place'>{name}, {country}</div>\r\n                </div>\r\n            </div>\r\n            <div className='date'>{new Date().toLocaleString()}</div>\r\n            <div className='extra-temp'>\r\n                <div className='temp-info-minmax'>\r\n                    <div className='two-sided-section'>\r\n                        <p><i className='wi wi-sunset'></i></p>\r\n                        <p className='extra-info-leftside'>\r\n                            {timeStr} <br />\r\n                            Sunset\r\n                        </p>\r\n                    </div>\r\n                    <div className='two-sided-section'>\r\n                        <p><i className='wi wi-humidity'></i></p>\r\n                        <p className='extra-info-leftside'>\r\n                            {humidity} <br />\r\n                            humidity\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='weather-extra-info'>\r\n                    <div className='two-sided-section'>\r\n                        <p><i className='wi wi-rain'></i></p>\r\n                        <p className='extra-info-leftside'>\r\n                            {pressure} <br />\r\n                            Pressure\r\n                        </p>\r\n                    </div>\r\n                    <div className='two-sided-section'>\r\n                        <p><i className='wi wi-strong-wind'></i></p>\r\n                        <p className='extra-info-leftside'>\r\n                            {speed} <br />\r\n                            Speed\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </article>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React, {useState, useEffect} from 'react';\r\nimport WeatherCard from './weatherCard';\r\nimport './style.css';\r\n\r\nconst Temp = () => {\r\n\r\n    const [searchValue, getSearchValue] = useState(\"delhi\");\r\n    const [tempInfo, setTempInfo] = useState({});\r\n\r\n    const getWeatherInfo = async() => {\r\n        try {\r\n            let url =  `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=e144ab1ecf4bef24906a0fefcb40c6fe`;\r\n\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            \r\n            const {temp, humidity, pressure} = data.main;\r\n            const {main: weathermood} = data.weather[0];\r\n            const {name} = data;\r\n            const {speed} = data.wind;\r\n            const {country, sunset} = data.sys;\r\n\r\n            const myNewWeatherInfo = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                weathermood,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunset\r\n            };\r\n\r\n            setTempInfo(myNewWeatherInfo);\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getWeatherInfo();\r\n    }, []);\r\n\r\n    return <>\r\n        <div className='wrap'>\r\n            <div className='search'>\r\n                <input type='search' placeholder='search...' autoFocus id='search' className='searchTerm' value={searchValue} onChange={(e) => getSearchValue(e.target.value)} />\r\n                <button className='searchButton' type='button' onClick={getWeatherInfo}>\r\n                    Search\r\n                </button>\r\n            </div>\r\n        </div>\r\n        \r\n        {/* out temp card */}\r\n        <WeatherCard tempInfo = {tempInfo} />\r\n\r\n        \r\n    </>\r\n}\r\n\r\nexport default Temp;\r\n","import React from \"react\";\nimport Temp from \"./weather/temp\";\n\nfunction App() {\n  return (\n    <div>\n      <Temp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//5. Create a Note.jsx component to show a <div> element with a\n//<h1> for a title and a <p> for the content.\n//6. Make sure that the final website is styled like the example shown here:\n//https://w00gz.csb.app/\n\n//HINT: You will need to study the classes in teh styles.css file to appy styling.\n"],"sourceRoot":""}